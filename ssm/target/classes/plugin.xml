<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
                            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                            http://www.springframework.org/schema/context  
                            http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                            http://www.springframework.org/schema/mvc  
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- excel -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">  
    	<property name="order" value="0"/>  
	</bean>
	
	<!-- 两个标准配置 -->
	<!-- 将spring mvc 不能处理的请求交给tomcat -->
	<mvc:default-servlet-handler/>
	<!-- 支持spring mvc 更高级的功能 -->
	<mvc:annotation-driven/>
    <mvc:resources mapping="/static/css/**" location="/WEB-INF/static/css/" />
    <mvc:resources mapping="/static/fonts/**" location="/WEB-INF/static/fonts/" />
    <mvc:resources mapping="/static/img/**" location="/WEB-INF/static/img/" />
    <mvc:resources mapping="/static/js/**" location="/WEB-INF/static/js/" />
    <mvc:resources mapping="/static/plug/**" location="/WEB-INF/static/plug/" />
    <mvc:resources mapping="/error/**" location="/WEB-INF/views/error/" />
    <mvc:default-servlet-handler/>
    
    <!-- spring 错误拦截 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	    <property name="exceptionMappings">
	        <map>
	            <entry key="ResourceNotFoundException" value="common/error/resourceNotFoundError" />
	            <entry key=".DataAccessException" value="common/error/dataAccessError" />
	        </map>
	    </property>
	    <property name="statusCodes">
	        <map>
	            <entry key="common/error/resourceNotFoundError" value="404" />
	            <entry key="common/error/dataAccessError" value="500" />
	        </map>
	    </property>
	</bean> 
	
	<!-- 增加定时任务插件 -->
    <context:annotation-config></context:annotation-config>
    <!-- spring 扫描注解配置 
    <context:component-scan base-package="com.job"></context:component-scan>-->
    <!-- 开启这个配置 spring才能识别@Scheduled注解 
    <task:annotation-driven scheduler="qbScheduler" mode="proxy"/>
    <task:scheduler id="qbScheduler" pool-size="10"/>-->
    
    
    
    <!--200*1024*1024即200M resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常 -->  
	<!-- 上传附件 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<!-- 上传文件大小上限 单位为字节（10MB）-->
		<property name="maxUploadSize" value="209715200" /> 
		<!-- 请求的编码格式,必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->    
		<property name="defaultEncoding" value="UTF-8" />  
		<property name="resolveLazily" value="true" />  
	</bean>
</beans>